spring.application.name=Testing
#spring.data.mongodb.uri=mongodb+srv://user:Mallika@mig1.ofnuglg.mongodb.net/UsersDB?retryWrites=true&w=majority&appName=MIG1
#
#spring.couchbase.connection-string=couchbases://cb.uim1hdehicxud9.cloud.couchbase.com
#spring.couchbase.username=MIGC
#spring.couchbase.password=Techstar@123
#spring.couchbase.bucket=MigratedUsers
#spring.couchbase.env.ssl.enabled=true
#spring.couchbase.env.ssl.enabled=true
#spring.couchbase.env.ssl.truststore.path="C:/Users/BommulaMallikaDurgaS/Downloads/MIGC-root-certificate.txt"
#spring.couchbase.env.ssl.truststore.password=mallika
#spring.security.user.name=user
#spring.security.user.password=userMallika
# OAuth2 Configuration
# OAuth2 Configuration
#spring.security.oauth2.resourceserver.jwt.issuer-uri=https://migration-uri.com
#spring.security.oauth2.resourceserver.jwt.issuer-uri=https://dev-qyezg6s35kzzqg7v.us.auth0.com/
#logging.level.org.springframework.security=DEBUG
#
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://dev-qyezg6s35kzzqg7v.us.auth0.com/.well-known/jwks.json
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://dev-qyezg6s35kzzqg7v.us.auth0.com/
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://dev-qyezg6s35kzzqg7v.us.auth0.com/.well-known/jwks.json

spring.kafka.bootstrap-servers=192.168.3.45:9092

#kafka.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.group-id=spring-boot-consumer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#

# Enable CORS for Spring MVC
spring.mvc.dispatch-options-request=true
# Disable CSRF for WebSocket endpoints
spring.security.csrf.enabled=false
# Add these to your application.properties
# Security headers
security.headers.xss-protection=1; mode=block
security.headers.content-type-options=nosniff
security.headers.frame-options=DENY
security.headers.referrer-policy=strict-origin-when-cross-origin
#
## Rate limiting
#security.rate-limit.enabled=true
#security.rate-limit.requests-per-minute=60
#security.rate-limit.burst-capacity=10
#
## File upload security
security.file-upload.max-size=10485760
security.file-upload.allowed-extensions=.pem,.crt,.cer,.key,.txt
#
## Encryption
security.encryption.key=
##${ENCRYPTION_KEY:} # Set this as environment variable
#
## CORS
security.cors.allowed-origins=http://localhost:3000,http://127.0.0.1:3000
security.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
security.cors.allowed-headers=*
security.cors.allow-credentials=true
#
## Session management
server.servlet.session.timeout=30m
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=true
#
## HTTPS enforcement (for production)
security.require-ssl=true


security.ssrf.allowed-domains=localhost,127.0.0.1,*.mongodb.net,*.mongodb.com,*.couchbase.com
#


## WebSocket + STOMP
#logging.level.org.springframework.web.socket=DEBUG
#logging.level.org.springframework.web.socket.sockjs=DEBUG
#logging.level.org.springframework.web.socket.server.support=TRACE
#logging.level.org.springframework.messaging.simp=DEBUG
#logging.level.org.springframework.messaging.simp.stomp=DEBUG
#
#
#logging.level.com.demo.security.WebSocketSecurityConfig=DEBUG

#
#logging.level.root=INFO
#logging.level.com.demo=DEBUG
#
## ===== Multipart (file uploads) =====
#logging.level.org.springframework.web.multipart=DEBUG
#logging.level.org.springframework.web.multipart.support=DEBUG
#
## ===== CORS / CSRF / Security filter chain / JWT =====
#logging.level.org.springframework.security=DEBUG
#logging.level.org.springframework.security.web.FilterChainProxy=DEBUG
#logging.level.org.springframework.security.web.access=DEBUG
#logging.level.org.springframework.security.web.csrf=DEBUG
#logging.level.org.springframework.security.web.access.channel=DEBUG
#logging.level.org.springframework.security.oauth2=DEBUG
#logging.level.org.springframework.security.oauth2.server.resource=DEBUG
#
## Your custom security code (rate limiting, headers, lockout, SSRF/Input validation)
#logging.level.com.demo.security=DEBUG
#
## ===== MongoDB driver =====
#logging.level.org.mongodb.driver=DEBUG
#logging.level.com.mongodb=DEBUG
#
## ===== Couchbase SDK =====
#logging.level.com.couchbase.client=INFO  
#
#
## ===== WebSocket / STOMP =====
#logging.level.org.springframework.web.socket=DEBUG
#logging.level.org.springframework.messaging.simp=DEBUG
#logging.level.org.springframework.messaging=INFO
#
#
## ===== CORS filter visibility (optional, helpful) =====
#logging.level.org.springframework.web.cors=DEBUG
#logging.level.org.springframework.web.filter.CorsFilter=DEBUG
#
## ===== Make error bodies informative in dev =====
#server.error.include-message=always
#server.error.include-binding-errors=always
#server.error.include-exception=true
#
## ===== Tomcat access log (see every request + status) =====
#server.tomcat.accesslog.enabled=true
#server.tomcat.accesslog.pattern=%h %l %u %t "%r" %s %b %Dms
## OAuth2 Security
#spring.security.oauth2.resourceserver.jwt.issuer-uri=https://dev-qyezg6s35kzzqg7v.us.auth0.com/
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://dev-qyezg6s35kzzqg7v.us.auth0.com/.well-known/jwks.json
#
## Kafka Configuration
#spring.kafka.bootstrap-servers=192.168.3.45:9092
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.consumer.group-id=spring-boot-consumer
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#
## Security Headers
#security.headers.xss-protection=1; mode=block
#security.headers.content-type-options=nosniff
#security.headers.frame-options=DENY
#security.headers.referrer-policy=strict-origin-when-cross-origin
#security.headers.permissions-policy=geolocation=(self), microphone=(), camera=()
#
## Rate Limiting
#security.rate-limit.enabled=true
#security.rate-limit.requests-per-minute=60
#security.rate-limit.burst-capacity=10
#security.rate-limit.cleanup-interval=60000
#
## Account Lockout
#security.lockout.max-attempts=5
#security.lockout.duration-minutes=30
#security.lockout.reset-after-minutes=120
#
## File Upload Security
#security.file-upload.max-size=10485760
#security.file-upload.allowed-extensions=.pem,.crt,.cer,.key,.txt
#security.file-upload.scan-enabled=true
#security.file-upload.quarantine-suspicious=true
#
## Encryption
#security.encryption.key=${ENCRYPTION_KEY:}
#security.encryption.algorithm=AES/GCM/NoPadding
#security.encryption.key-size=256
#
## Key Rotation
#security.key-rotation.enabled=true
#security.key-rotation.interval-days=30
#security.key-rotation.cron=0 0 0 1 * ?
#security.key-rotation.grace-period-days=7
#
## Vault Configuration
#security.vault.provider=${VAULT_PROVIDER:local}
#security.vault.hashicorp.url=${VAULT_URL:}
#security.vault.hashicorp.token=${VAULT_TOKEN:}
#security.vault.aws.region=${AWS_REGION:us-east-1}
#
## SSRF Protection
#security.ssrf.allowed-domains=localhost,127.0.0.1
##,*.mongodb.com,*.couchbase.com
#security.ssrf.block-private-ips=true
#security.ssrf.validate-redirects=true
#
## CORS
#security.cors.allowed-origins=http://localhost:3000,http://127.0.0.1:3000
#security.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD
#security.cors.allowed-headers=*
#security.cors.allow-credentials=true
#security.cors.max-age=3600
#
## Session Management
#server.servlet.session.timeout=30m
#server.servlet.session.cookie.http-only=true
#server.servlet.session.cookie.secure=true
#server.servlet.session.cookie.same-site=strict
#
## Security Events
#security.events.alert-threshold=5
#security.events.anomaly-detection=true
#security.events.kafka-topic=security-events
#
## HTTPS/TLS
#security.require-ssl=true
#server.ssl.enabled=${SSL_ENABLED:false}
#server.ssl.key-store=${SSL_KEYSTORE:}
#server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD:}
#server.ssl.key-store-type=PKCS12
#server.ssl.key-alias=tomcat
#
## Input Validation
#security.validation.max-string-length=10000
#security.validation.max-array-size=1000
#security.validation.max-json-depth=10
#
## Logging
#logging.level.SECURITY_AUDIT=INFO
#logging.level.com.demo.security=DEBUG
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
#logging.file.name=logs/security.log
#logging.file.max-size=100MB
#logging.file.max-history=30
#
## Actuator Security
#management.endpoints.web.exposure.include=health,info,metrics
#management.endpoint.health.show-details=when-authorized
#management.endpoint.health.roles=ADMIN
#management.security.enabled=true